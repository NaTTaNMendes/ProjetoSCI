unit uConsEmpresas;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uFormPadraoConsultaPEDSCI, Data.DB,
  System.ImageList, Vcl.ImgList, Vcl.Grids, Vcl.DBGrids, Vcl.ComCtrls,
  Vcl.ToolWin, Datasnap.DBClient, uUtilPEDSCI, Vcl.StdCtrls;

type
  TfrConsEmpresas = class(TfrFormPadraoConsultaPEDSCI)
    lbFiltrar: TLabel;
    cbFiltro: TComboBox;
    edFiltro: TEdit;
    procedure FormShow(Sender: TObject);
    procedure btFiltrarClick(Sender: TObject);
    procedure grConsultaTitleClick(Column: TColumn);
  private
    { Private declarations }
    wTEmpresa : TEmpresa;
    procedure PVerificaGrid();
    procedure PFiltraCodigo();
    procedure PFiltraNome();
    procedure PFiltraCNPJ();
    procedure PFiltraUF();
    procedure PFiltraTelefone();
  public
    { Public declarations }
    wFiltro : Integer;
    function setTabela: TClientDataSet; override;
  end;

var
  frConsEmpresas: TfrConsEmpresas;

implementation

{$R *.dfm}

uses udmDadosPEDSCI;

{ TfrConsEmpresas }

procedure TfrConsEmpresas.pFiltraCNPJ;
begin
  if (edFiltro.Text = '') then
     begin
       ShowMessage('CNPJ inválido');
       edFiltro.Text := '';
       edFiltro.SetFocus;
     end
  else
     begin
       dmDadosPEDSCI.tbEmpresas.Filtered := False;
       dmDadosPEDSCI.tbEmpresas.Filter := 'BDCNPJCPF like ' + QuotedStr('%' + edFiltro.Text + '%');
       dmDadosPEDSCI.tbEmpresas.Filtered := True;
     end;

  pVerificaGrid;

end;

procedure TfrConsEmpresas.pFiltraCodigo;
var
  wtemp : Integer;
begin
  try
    wTemp := StrToInt(edFiltro.Text);
    dmDadosPEDSCI.tbEmpresas.Filtered := False;
    dmDadosPEDSCI.tbEmpresas.Filter := '(BDCODEMP = ' + edFiltro.Text + ')';
    dmDadosPEDSCI.tbEmpresas.Filtered := True;
  except
    ShowMessage('Código inválido');
    edFiltro.Text := '';
    edFiltro.SetFocus;
    grConsulta.SelectedRows.ToString;
  end;

  pVerificaGrid;
end;

procedure TfrConsEmpresas.pFiltraNome;
begin
  if (edFiltro.Text = '') then
     begin
       ShowMessage('Nome inválido');
       edFiltro.Text := '';
       edFiltro.SetFocus;
     end
  else
     begin
       dmDadosPEDSCI.tbEmpresas.Filtered := False;
       dmDadosPEDSCI.tbEmpresas.Filter := 'BDNOMEEMP like ' + QuotedStr('%' + edFiltro.Text + '%');
       dmDadosPEDSCI.tbEmpresas.Filtered := True;
     end;

  pVerificaGrid;
end;

procedure TfrConsEmpresas.pFiltraTelefone;
begin
  if (edFiltro.Text = '') then
     begin
       ShowMessage('Telefone inválido');
       edFiltro.Text := '';
       edFiltro.SetFocus;
     end
  else
     begin
       dmDadosPEDSCI.tbEmpresas.Filtered := False;
       dmDadosPEDSCI.tbEmpresas.Filter := 'BDTELEFONE like ' + QuotedStr('%' + edFiltro.Text + '%');
       dmDadosPEDSCI.tbEmpresas.Filtered := True;
     end;

  pVerificaGrid;
end;

procedure TfrConsEmpresas.pFiltraUF;
var
  wtemp : Integer;
begin
  try
    wTemp := StrToInt(edFiltro.Text);
    dmDadosPEDSCI.tbEmpresas.Filtered := False;
    dmDadosPEDSCI.tbEmpresas.Filter := '(BDCODUF = ' + edFiltro.Text + ')';
    dmDadosPEDSCI.tbEmpresas.Filtered := True;
  except
    ShowMessage('UF inválida');
    edFiltro.Text := '';
    edFiltro.SetFocus;
  end;

  pVerificaGrid;
end;

procedure TfrConsEmpresas.btFiltrarClick(Sender: TObject);
begin
  inherited;
  if (cbFiltro.ItemIndex = 1) then
     PFiltraCodigo
  else if (cbFiltro.ItemIndex = 2) then
     PFiltraNome
  else if (cbFiltro.ItemIndex = 3) then
     PFiltraCNPJ
  else if (cbFiltro.ItemIndex = 4) then
     PFiltraUF
  else if (cbFiltro.ItemIndex = 5) then
     PFiltraTelefone
  else
     begin
       dmDadosPEDSCI.tbEmpresas.Filtered := False;
       edFiltro.Text := '';
     end;
end;

procedure TfrConsEmpresas.FormShow(Sender: TObject);
begin
  inherited;
  // CRIA A VARIÁVEL EMPRESA
  wTEmpresa := TEmpresa.Create;
end;

procedure TfrConsEmpresas.grConsultaTitleClick(Column: TColumn);
begin
  inherited;
  if (Column.FieldName = 'BDCODEMP') then
     dmDadosPEDSCI.tbEmpresas.IndexFieldNames := 'BDCODEMP'
  else if (Column.FieldName = 'BDCNPJCPF') then
     dmDadosPEDSCI.tbEmpresas.IndexFieldNames := 'BDCNPJCPF'
  else if (Column.FieldName = 'BDNOMEEMP') then
     dmDadosPEDSCI .tbEmpresas.IndexFieldNames := 'BDNOMEEMP'
  else if (Column.FieldName = 'BDCODUF') then
     dmDadosPEDSCI.tbEmpresas.IndexFieldNames := 'BDCODUF'
  else if (Column.FieldName = 'BDTELEFONE') then
     dmDadosPEDSCI.tbEmpresas.IndexFieldNames := 'BDTELEFONE';
end;

procedure TfrConsEmpresas.pVerificaGrid;
begin
  if (dmDadosPEDSCI.tbEmpresas.RecordCount = 0) then
     begin
       ShowMessage('Nenhum dado encontrado');
       dmDadosPEDSCI.tbEmpresas.Filtered := False;
     end;
end;

function TfrConsEmpresas.setTabela: TClientDataSet;
begin
  Result := dmDadosPEDSCI.tbEmpresas;
end;

end.
