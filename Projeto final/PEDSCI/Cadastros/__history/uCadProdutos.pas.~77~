unit uCadProdutos;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uFormPadraoCadastroPEDSCI,
  System.ImageList, Vcl.ImgList, Vcl.ComCtrls, Vcl.ToolWin, Vcl.StdCtrls, uUtilPEDSCI,
  Data.DB, Datasnap.DBClient, udmDadosPEDSCI;

type
  TfrCadProduto = class(TfrFormPadraoCadastroPEDSCI)
    lbDescricao: TLabel;
    lbCodigo: TLabel;
    lbNCM: TLabel;
    mDescricao: TMemo;
    edCodigo: TEdit;
    edNCM: TEdit;
    lbAviso: TLabel;
    lbValor: TLabel;
    edValor: TEdit;
    procedure FormShow(Sender: TObject);
    procedure btOkClick(Sender: TObject);
    procedure btExcluirClick(Sender: TObject);
    procedure btConsultarClick(Sender: TObject);
    procedure pLimpaDados();
    procedure pColetaDados();
    procedure edCodigoExit(Sender: TObject);
  private
    { Private declarations }
    // VARÍAVEIS GLOBAIS
    wTProduto                     : TProduto;

    // FUNÇÕES
    function fVerificaCodigo()    : Boolean;
    function fVerificaNCM()       : Boolean;
    function fVerificaDescricao() : Boolean;
    function fVerificaValor()     : Boolean;
  public
    { Public declarations }
    function setTabela: TClientDataSet; override;
  end;

var
  frCadProduto: TfrCadProduto;

implementation

uses uConsProdutos;

{$R *.dfm}


{ TfrCadProduto }

procedure TfrCadProduto.btConsultarClick(Sender: TObject);
begin
  inherited;
  // CRIA E MOSTRA UMA TELA DE CONSULTA DE PRODUTO
  TfrConsProduto.Create(edCodigo);
end;

procedure TfrCadProduto.btExcluirClick(Sender: TObject);
var
  wPasse : Boolean;
begin
  inherited;

  // VERIFICA SE OS DADOS DOS CAMPOS ESTÃO CORRETOS
  wPasse := True;
  if not(fVerificaCodigo)         then
     wPasse := False
  else if not(fVerificaNCM)       then
     wPasse := False
  else if not(fVerificaDescricao) then
     wPasse := False
  else if not(fVerificaValor)     then
     wPasse := False;

  // EXECUTA A AÇÃO SE TUDO ESTIVER CERTO
  if (wPasse) then
     begin
       // COLETA OS DADOS
       pColetaDados;

       // TENTA DELETAR OS DADOS
       if (wTProduto.fDeletarProduto) then
          begin
            ShowMessage('Deletado com sucesso');
            setLimpaCampos;
            pLimpaDados;
            edCodigo.SetFocus;
          end
       else
          ShowMessage('Falha ao deletar');
     end;

end;

procedure TfrCadProduto.btOkClick(Sender: TObject);
var
  wPasse : Boolean;
begin
  inherited;

  // VERIFICA SE OS CAMPOS ESTÃO CORRETOS
  wPasse := True;
  if not(fVerificaCodigo)         then
     wPasse := False
  else if not(fVerificaNCM)       then
     wPasse := False
  else if not(fVerificaValor)     then
     wPasse := False
  else if not(fVerificaDescricao) then
     wPasse := False;

  // TENTA INSERIR CASO OS DADOS PASSEM PELA VERIFICAÇÃO
  if (wPasse) then
     begin
       // COLETA OS DADOS
       pColetaDados;

       // ENVIA PARA O BANCO
       if (wTProduto.fInserirProduto) then
          begin
            ShowMessage('Dados inseridos');
            setLimpaCampos;
            pLimpaDados;
            edCodigo.SetFocus;
            lbAviso.Caption := '';
          end
       else
          ShowMessage('Falha ao inserir dados');
     end;

end;

procedure TfrCadProduto.edCodigoExit(Sender: TObject);
begin
  inherited;
  // CASO O CÓDIGO SEJA INVÁLIDO NADA ACONTECE
  try
    // COLOCA FOCO NO CAMPO DE CÓDIGO
    dmDadosPEDSCI.tbProdutos.IndexFieldNames := 'BDCODPROD';

    // VERIFICA SE JÁ EXISTE ALGUM DADO NO BANCO
    if dmDadosPEDSCI.tbProdutos.FindKey([StrToInt(Trim(edCodigo.Text))]) then
       begin
         // INSERE OS DADOS DO BANCO NOS COMPONENTES
         edCodigo.Text   := dmDadosPEDSCI.tbProdutos.FieldByName('BDCODPROD').AsString;
         mDescricao.Text := dmDadosPEDSCI.tbProdutos.FieldByName('BDDESCRICAO').AsString;
         edNCM.Text      := dmDadosPEDSCI.tbProdutos.FieldByName('BDNCM').AsString;
         edValor.Text    := dmDadosPEDSCI.tbProdutos.FieldByName('BDVALOR').AsString;
       end;
  except
  end;

end;

procedure TfrCadProduto.FormShow(Sender: TObject);
begin
  inherited;
  // CRIA O OBJETO PRODUTO
  wTProduto := TProduto.Create;

  // LIMPA OS CAMPOS
  setLimpaCampos;
  pLimpaDados;

  // PREPARA O LABEL DE AVISO
  lbAviso.Font.Color := clRed;
  lbAviso.Caption := '';
end;

function TfrCadProduto.fVerificaCodigo: Boolean;
var
  temp : Integer;
begin
  // TENTA CONVERTER A STRING PARA INTEIRO
  try
    temp := StrToInt(edCodigo.Text);
    Result := True;
  except
    // SE FALHAR INVALIDA O CAMPO
    lbAviso.Caption := 'Código inválido';
    edCodigo.SetFocus;
    Result := False;
  end;
end;

function TfrCadProduto.fVerificaDescricao: Boolean;
begin
  // VERIFICA SE A DESCRIÇÃO NÃO ESTÁ VAZIA
  mDescricao.Text := TrimLeft(mDescricao.Text);
  mDescricao.Text := TrimRight(mDescricao.Text);
  if (mDescricao.Text = '') then
     begin
       lbAviso.Caption := 'Descrição inválida';
       mDescricao.SetFocus;
       Result := False;
     end
  // VERIFICA SE A DESCRICAO NÃO É MUITO GRANDE
  else if (Length(mDescricao.Text) > 500) then
     begin
       lbAviso.Caption := 'Descrição muito grande';
       mDescricao.SetFocus;
       Result := False;
     end
  else
     Result := True;
end;

function TfrCadProduto.fVerificaNCM: Boolean;
var
  wTemp : Integer;
begin
  // TENTA CONVERTER A STRING PARA INTEIRO
  try
    wTemp := StrToInt(edNCM.Text);
    Result := True;
  except
    // SE FALHAR INVALIDA O CAMPO
    lbAviso.Caption := 'NCM inválido';
    edNCM.SetFocus;
    Result := False;
  end;
end;

function TfrCadProduto.fVerificaValor: Boolean;
var
  wTemp : Currency;
begin
  // TENTA CONVERTER A STRING PARA CURRENCY
  try
    wTemp := StrToCurr(edValor.Text);
    Result := True;
  except
    // SE FALHAR INVALIDA O CAMPO
    lbAviso.Caption := 'Valor inválido';
    edValor.SetFocus;
    Result := False;
  end;
end;

procedure TfrCadProduto.pColetaDados;
begin
  // COLETA OS DADOS NA TELA
  wTProduto.wCod        := StrToInt(edCodigo.Text);
  wTProduto.wDescricao  := mDescricao.Text;
  wTProduto.wNCM        := StrToInt(edNCM.Text);
  wTProduto.wValor      := StrToCurr(edValor.Text);
end;

procedure TfrCadProduto.pLimpaDados;
begin
  // REMOVE OS DADOS DA CLASSE TPRODUTO
  wTProduto.wCod        := 0;
  wTProduto.wDescricao  := '';
  wTProduto.wNCM        := 0;
  wTProduto.wValor      := 0;
end;

function TfrCadProduto.setTabela: TClientDataSet;
begin
  Result := dmDadosPEDSCI.tbProdutos;
end;

end.
